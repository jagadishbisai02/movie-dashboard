{"ast":null,"code":"import{useState,useEffect}from\"react\";import{InfinitySpin}from\"react-loader-spinner\";import MovieCard from\"../MovieCards/moviesCard\";import\"./movie.css\";import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const Api_key=\"ae5f31e6a117648d9a5029a810f766e5\";const apiStatusConstants={initial:\"INITIAL\",inProgress:\"IN_PROGRESS\",success:\"SUCCESS\",failure:\"FAILURE\"};const Movie=_ref=>{let{searchValue}=_ref;console.log(searchValue);const[apiResponse,setApiResponse]=useState({status:apiStatusConstants.initial,movieList:null,errorMsg:null});useEffect(()=>{const getMovies=async()=>{setApiResponse({status:apiStatusConstants.inProgress,movieList:null,errorMsg:null});const apiUrl=\"https://api.themoviedb.org/3/movie/popular?api_key=\".concat(Api_key,\"&language=en-US&query=\").concat(searchValue,\"&page=1\");const option={method:\"GET\"};const response=await fetch(apiUrl,option);const data=await response.json();if(response.ok){setApiResponse(prev=>({...prev,status:apiStatusConstants.success,movieList:data.results}));}else{setApiResponse(prev=>({...prev,status:apiStatusConstants.success,errorMsg:data.error_msg}));}};getMovies();},[searchValue]);const renderFailureView=()=>{const{errorMsg}=apiResponse;return/*#__PURE__*/_jsx(\"p\",{children:errorMsg});};const renderLoadingView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"loader-spinner-container\",children:/*#__PURE__*/_jsx(InfinitySpin,{visible:true,width:\"200\",color:\"#4fa94d\",ariaLabel:\"infinity-spin-loading\"})});const renderSuccess=()=>{const{movieList}=apiResponse;return/*#__PURE__*/_jsx(\"ul\",{className:\"movie-card-container\",children:movieList.map(eachMovie=>/*#__PURE__*/_jsx(MovieCard,{movie:eachMovie},eachMovie.id))});};const renderLeaderboard=()=>{const{status}=apiResponse;switch(status){case apiStatusConstants.inProgress:return renderLoadingView();case apiStatusConstants.success:return renderSuccess();case apiStatusConstants.failure:return renderFailureView();default:return null;}};return/*#__PURE__*/_jsx(_Fragment,{children:renderLeaderboard()});};export default Movie;","map":{"version":3,"names":["useState","useEffect","InfinitySpin","MovieCard","jsx","_jsx","Fragment","_Fragment","Api_key","apiStatusConstants","initial","inProgress","success","failure","Movie","_ref","searchValue","console","log","apiResponse","setApiResponse","status","movieList","errorMsg","getMovies","apiUrl","concat","option","method","response","fetch","data","json","ok","prev","results","error_msg","renderFailureView","children","renderLoadingView","className","visible","width","color","ariaLabel","renderSuccess","map","eachMovie","movie","id","renderLeaderboard"],"sources":["C:/Users/jagad/OneDrive/Desktop/website/Assignment-1/moviedb/src/components/Movies/movie.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { InfinitySpin } from \"react-loader-spinner\";\r\nimport MovieCard from \"../MovieCards/moviesCard\";\r\nimport \"./movie.css\";\r\n\r\nconst Api_key = \"ae5f31e6a117648d9a5029a810f766e5\";\r\n\r\nconst apiStatusConstants = {\r\n  initial: \"INITIAL\",\r\n  inProgress: \"IN_PROGRESS\",\r\n  success: \"SUCCESS\",\r\n  failure: \"FAILURE\",\r\n};\r\n\r\nconst Movie = ({ searchValue }) => {\r\n  console.log(searchValue);\r\n  const [apiResponse, setApiResponse] = useState({\r\n    status: apiStatusConstants.initial,\r\n    movieList: null,\r\n    errorMsg: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      setApiResponse({\r\n        status: apiStatusConstants.inProgress,\r\n        movieList: null,\r\n        errorMsg: null,\r\n      });\r\n\r\n      const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${Api_key}&language=en-US&query=${searchValue}&page=1`;\r\n      const option = {\r\n        method: \"GET\",\r\n      };\r\n\r\n      const response = await fetch(apiUrl, option);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setApiResponse((prev) => ({\r\n          ...prev,\r\n          status: apiStatusConstants.success,\r\n          movieList: data.results,\r\n        }));\r\n      } else {\r\n        setApiResponse((prev) => ({\r\n          ...prev,\r\n          status: apiStatusConstants.success,\r\n          errorMsg: data.error_msg,\r\n        }));\r\n      }\r\n    };\r\n\r\n    getMovies();\r\n  }, [searchValue]);\r\n\r\n  const renderFailureView = () => {\r\n    const { errorMsg } = apiResponse;\r\n    return <p>{errorMsg}</p>;\r\n  };\r\n\r\n  const renderLoadingView = () => (\r\n    <div className=\"loader-spinner-container\">\r\n      <InfinitySpin\r\n        visible={true}\r\n        width=\"200\"\r\n        color=\"#4fa94d\"\r\n        ariaLabel=\"infinity-spin-loading\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderSuccess = () => {\r\n    const { movieList } = apiResponse;\r\n\r\n    return (\r\n      <ul className=\"movie-card-container\">\r\n        {movieList.map((eachMovie) => (\r\n          <MovieCard movie={eachMovie} key={eachMovie.id} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const renderLeaderboard = () => {\r\n    const { status } = apiResponse;\r\n\r\n    switch (status) {\r\n      case apiStatusConstants.inProgress:\r\n        return renderLoadingView();\r\n      case apiStatusConstants.success:\r\n        return renderSuccess();\r\n      case apiStatusConstants.failure:\r\n        return renderFailureView();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return <>{renderLeaderboard()}</>;\r\n};\r\n\r\nexport default Movie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}