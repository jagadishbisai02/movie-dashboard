{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst Api_key = \"ae5f31e6a117648d9a5029a810f766e5\";\nconst apiStatusConstants = {\n  initial: \"INITIAL\",\n  inProgress: \"IN_PROGRESS\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\"\n};\nexport default function MovieDetail(props) {\n  _s();\n  const {\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    id\n  } = params;\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    movieDetail: null,\n    errorMsg: null\n  });\n  useEffect(() => {\n    const getMovie = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        movieDetail: null,\n        errorMsg: null\n      });\n      const apiUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${Api_key}&language=en-US`;\n      const option = {\n        method: \"GET\"\n      };\n      const response = await fetch(apiUrl, option);\n      const data = await response.json();\n      if (response.ok) {\n        setApiResponse(prev => ({\n          ...prev,\n          status: apiStatusConstants.success,\n          movieDetail: data.cast\n        }));\n      } else {\n        setApiResponse(prev => ({\n          ...prev,\n          status: apiStatusConstants.success,\n          errorMsg: data.error_msg\n        }));\n      }\n    };\n    getMovie();\n  }, []);\n  const renderSuccess = () => {\n    const {\n      movieDetail\n    } = apiResponse;\n  };\n}\n_s(MovieDetail, \"mqiNSf/TYrDmgQaqs9M2Thq3PXc=\");\n_c = MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["useState","useEffect","Api_key","apiStatusConstants","initial","inProgress","success","failure","MovieDetail","props","_s","match","params","id","apiResponse","setApiResponse","status","movieDetail","errorMsg","getMovie","apiUrl","option","method","response","fetch","data","json","ok","prev","cast","error_msg","renderSuccess","_c","$RefreshReg$"],"sources":["C:/Users/jagad/OneDrive/Desktop/website/Assignment-1/moviedb/src/components/MovieDetails/moviedetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst Api_key = \"ae5f31e6a117648d9a5029a810f766e5\";\r\n\r\nconst apiStatusConstants = {\r\n  initial: \"INITIAL\",\r\n  inProgress: \"IN_PROGRESS\",\r\n  success: \"SUCCESS\",\r\n  failure: \"FAILURE\",\r\n};\r\n\r\nexport default function MovieDetail(props) {\r\n  const { match } = props;\r\n  const { params } = match;\r\n  const { id } = params;\r\n\r\n  const [apiResponse, setApiResponse] = useState({\r\n    status: apiStatusConstants.initial,\r\n    movieDetail: null,\r\n    errorMsg: null,\r\n  });\r\n  useEffect(() => {\r\n    const getMovie = async () => {\r\n      setApiResponse({\r\n        status: apiStatusConstants.inProgress,\r\n        movieDetail: null,\r\n        errorMsg: null,\r\n      });\r\n\r\n      const apiUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${Api_key}&language=en-US`;\r\n      const option = {\r\n        method: \"GET\",\r\n      };\r\n\r\n      const response = await fetch(apiUrl, option);\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setApiResponse((prev) => ({\r\n          ...prev,\r\n          status: apiStatusConstants.success,\r\n          movieDetail: data.cast,\r\n        }));\r\n      } else {\r\n        setApiResponse((prev) => ({\r\n          ...prev,\r\n          status: apiStatusConstants.success,\r\n          errorMsg: data.error_msg,\r\n        }));\r\n      }\r\n    };\r\n\r\n    getMovie();\r\n  }, []);\r\n\r\n  const renderSuccess = () => {\r\n    const { movieDetail } = apiResponse;\r\n  };\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,kBAAkB,GAAG;EACzBC,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE,aAAa;EACzBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;AACX,CAAC;AAED,eAAe,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAM,CAAC,GAAGF,KAAK;EACvB,MAAM;IAAEG;EAAO,CAAC,GAAGD,KAAK;EACxB,MAAM;IAAEE;EAAG,CAAC,GAAGD,MAAM;EAErB,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC;IAC7CgB,MAAM,EAAEb,kBAAkB,CAACC,OAAO;IAClCa,WAAW,EAAE,IAAI;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACFjB,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BJ,cAAc,CAAC;QACbC,MAAM,EAAEb,kBAAkB,CAACE,UAAU;QACrCY,WAAW,EAAE,IAAI;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF,MAAME,MAAM,GAAI,sCAAqCP,EAAG,oBAAmBX,OAAQ,iBAAgB;MACnG,MAAMmB,MAAM,GAAG;QACbC,MAAM,EAAE;MACV,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,MAAM,EAAEC,MAAM,CAAC;MAC5C,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIH,QAAQ,CAACI,EAAE,EAAE;QACfZ,cAAc,CAAEa,IAAI,KAAM;UACxB,GAAGA,IAAI;UACPZ,MAAM,EAAEb,kBAAkB,CAACG,OAAO;UAClCW,WAAW,EAAEQ,IAAI,CAACI;QACpB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACLd,cAAc,CAAEa,IAAI,KAAM;UACxB,GAAGA,IAAI;UACPZ,MAAM,EAAEb,kBAAkB,CAACG,OAAO;UAClCY,QAAQ,EAAEO,IAAI,CAACK;QACjB,CAAC,CAAC,CAAC;MACL;IACF,CAAC;IAEDX,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAM;MAAEd;IAAY,CAAC,GAAGH,WAAW;EACrC,CAAC;AACH;AAACJ,EAAA,CA/CuBF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}