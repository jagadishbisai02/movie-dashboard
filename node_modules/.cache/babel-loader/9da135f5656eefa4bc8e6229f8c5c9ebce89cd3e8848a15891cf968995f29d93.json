{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jagad\\\\OneDrive\\\\Desktop\\\\website\\\\Assignment-1\\\\moviedb\\\\src\\\\components\\\\MovieDetails\\\\moviedetail.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { InfinitySpin } from \"react-loader-spinner\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Api_key = \"ae5f31e6a117648d9a5029a810f766e5\";\nconst apiStatusConstants = {\n  initial: \"INITIAL\",\n  inProgress: \"IN_PROGRESS\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\"\n};\nexport default function MovieDetail(props) {\n  _s();\n  const {\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    id\n  } = params;\n  const [apiResponse, setApiResponse] = useState({\n    status: apiStatusConstants.initial,\n    movieDetail: null,\n    errorMsg: null\n  });\n  useEffect(() => {\n    const getMovie = async () => {\n      setApiResponse({\n        status: apiStatusConstants.inProgress,\n        movieDetail: null,\n        errorMsg: null\n      });\n      const apiUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${Api_key}&language=en-US`;\n      const option = {\n        method: \"GET\"\n      };\n      const response = await fetch(apiUrl, option);\n      const data = await response.json();\n      console.log(data);\n      if (response.ok) {\n        setApiResponse(prev => ({\n          ...prev,\n          status: apiStatusConstants.success,\n          movieDetail: data.cast\n        }));\n      } else {\n        setApiResponse(prev => ({\n          ...prev,\n          status: apiStatusConstants.success,\n          errorMsg: data.error_msg\n        }));\n      }\n    };\n    getMovie();\n  }, []);\n  const renderSuccess = () => {\n    const {\n      movieDetail\n    } = apiResponse;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cast-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movieDetail.map(each => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${each.profile_path}`,\n            alt: each.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n  const renderFailureView = () => {\n    const {\n      errorMsg\n    } = apiResponse;\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  };\n  const renderLoadingView = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loader-spinner-container\",\n    children: /*#__PURE__*/_jsxDEV(InfinitySpin, {\n      visible: true,\n      width: \"200\",\n      color: \"#4fa94d\",\n      ariaLabel: \"infinity-spin-loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n  const renderLeaderboard = () => {\n    const {\n      status\n    } = apiResponse;\n    switch (status) {\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n      case apiStatusConstants.success:\n        return renderSuccess();\n      case apiStatusConstants.failure:\n        return renderFailureView();\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderLeaderboard()\n  }, void 0, false);\n}\n_s(MovieDetail, \"mqiNSf/TYrDmgQaqs9M2Thq3PXc=\");\n_c = MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["useState","useEffect","InfinitySpin","jsxDEV","_jsxDEV","Fragment","_Fragment","Api_key","apiStatusConstants","initial","inProgress","success","failure","MovieDetail","props","_s","match","params","id","apiResponse","setApiResponse","status","movieDetail","errorMsg","getMovie","apiUrl","option","method","response","fetch","data","json","console","log","ok","prev","cast","error_msg","renderSuccess","className","children","map","each","src","profile_path","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","renderFailureView","renderLoadingView","visible","width","color","ariaLabel","renderLeaderboard","_c","$RefreshReg$"],"sources":["C:/Users/jagad/OneDrive/Desktop/website/Assignment-1/moviedb/src/components/MovieDetails/moviedetail.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { InfinitySpin } from \"react-loader-spinner\";\r\n\r\nconst Api_key = \"ae5f31e6a117648d9a5029a810f766e5\";\r\n\r\nconst apiStatusConstants = {\r\n  initial: \"INITIAL\",\r\n  inProgress: \"IN_PROGRESS\",\r\n  success: \"SUCCESS\",\r\n  failure: \"FAILURE\",\r\n};\r\n\r\nexport default function MovieDetail(props) {\r\n  const { match } = props;\r\n  const { params } = match;\r\n  const { id } = params;\r\n\r\n  const [apiResponse, setApiResponse] = useState({\r\n    status: apiStatusConstants.initial,\r\n    movieDetail: null,\r\n    errorMsg: null,\r\n  });\r\n  useEffect(() => {\r\n    const getMovie = async () => {\r\n      setApiResponse({\r\n        status: apiStatusConstants.inProgress,\r\n        movieDetail: null,\r\n        errorMsg: null,\r\n      });\r\n\r\n      const apiUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${Api_key}&language=en-US`;\r\n      const option = {\r\n        method: \"GET\",\r\n      };\r\n\r\n      const response = await fetch(apiUrl, option);\r\n      const data = await response.json();\r\n      console.log(data);\r\n\r\n      if (response.ok) {\r\n        setApiResponse((prev) => ({\r\n          ...prev,\r\n          status: apiStatusConstants.success,\r\n          movieDetail: data.cast,\r\n        }));\r\n      } else {\r\n        setApiResponse((prev) => ({\r\n          ...prev,\r\n          status: apiStatusConstants.success,\r\n          errorMsg: data.error_msg,\r\n        }));\r\n      }\r\n    };\r\n\r\n    getMovie();\r\n  }, []);\r\n\r\n  const renderSuccess = () => {\r\n    const { movieDetail } = apiResponse;\r\n    return (\r\n      <div className=\"cast-container\">\r\n        <ul>\r\n        {movieDetail.map(each =>(\r\n          <li><img src={`https://image.tmdb.org/t/p/w500${each.profile_path}`} alt={each.name}/></li>\r\n        ))}</ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFailureView = () => {\r\n    const { errorMsg } = apiResponse;\r\n    return <p>{errorMsg}</p>;\r\n  };\r\n\r\n  const renderLoadingView = () => (\r\n    <div className=\"loader-spinner-container\">\r\n      <InfinitySpin\r\n        visible={true}\r\n        width=\"200\"\r\n        color=\"#4fa94d\"\r\n        ariaLabel=\"infinity-spin-loading\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const renderLeaderboard = () => {\r\n    const { status } = apiResponse;\r\n\r\n    switch (status) {\r\n      case apiStatusConstants.inProgress:\r\n        return renderLoadingView();\r\n      case apiStatusConstants.success:\r\n        return renderSuccess();\r\n      case apiStatusConstants.failure:\r\n        return renderFailureView();\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return <>{renderLeaderboard()}</>;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}